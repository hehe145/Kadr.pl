@model PagedList.IPagedList<ProjektPZ.Models.Film>
@using PagedList.Mvc
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Lista filmów";
}

<h2>Lista filmów</h2>

<p>
        @if (Request.IsAuthenticated)
        {
            <h4>@Html.ActionLink("Dodaj nowy film", "Create")</h4>
        }

</p>
@using (Html.BeginForm())
{
    
        
    
    <p>
        Wyszukaj film: @Html.TextBox("searchString", ViewBag.CurrentFilter as string)
        Gatunek:
        <select name="genre" id="genre">
            <option value="-1">Wszystkie</option>
            <option value="1">Dramat</option>
            <option value="2">Komedia</option>
            <option value="3">Triller</option>
            <option value="4">Horror</option>
            <option value="5">Dokumentalny</option>
            <option value="6">Obyczajowy</option>
            <option value="7">Gangsterski</option>
            <option value="8">Parodia</option>
            <option value="9">Kryminał</option>
            <option value="10" walki">Sztuki walki</option>
        </select>
        <input type="submit" value="Wyszukaj" />
    </p>
}
<table class="table" style="width: 70%">
    <tr>
        <th></th>
        <th>
            @Html.ActionLink("Sortuj po tytule", "Index", new { sortOrder = ViewBag.NameSortPackParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Gatunek filmu:
        </th>
        <th>
            @Html.ActionLink("Sortuj po roku premiery", "Index", new { sortOrder = ViewBag.DatePackParam, currentFilter = ViewBag.CurrentFilter })

        </th>
        <th></th>
    </tr>

        @foreach (var item in Model)
        {
            <tr onclick="location.href = '@(Url.Action("Details", "Films", new { id = item.ID }))'">

                <td>
                    <img src="~/Images/f_@(item.ID).jpg" style="width:100px;height:120px;" href="/Films/Details/@item.ID" class="img-fluid " />
                </td>
                <td>
                    <a href="/Films/Details/@item.ID">
                        <h3>@Html.DisplayFor(modelItem => item.Title)</h3>
                        @if (!item.Title.Equals(item.OrgTitle))
                        {
                            <h3>@Html.DisplayFor(modelItem => item.OrgTitle)</h3>
                        }
                    </a>
                </td>
                <td>
                    @item.Genre.Name
                </td>
                <td> <p>
                        @item.YearOfPremiere
                    </p>
                    <p>
                        @{ 
                            int suma = 0;
                            int liczbaGlosow = item.Ratings.Count();
                            if (liczbaGlosow > 0)
                            {
                                foreach (var i in item.Ratings)
                                {
                                    suma += i.Rate;
                                }
                                suma /= liczbaGlosow;
                            }


                        }
                        <h4>Ocena: @(suma/10.0) </h4> <h5>Głosy: @liczbaGlosow </h5>
                    </p>    
                </td>
                <td>
                    @if (Request.IsAuthenticated)
                {
                        @Html.ActionLink("Edytuj", "Edit", new { id = item.ID }) <br />

                    }
                    @if (User.IsInRole("Admin"))
                {
                        @Html.ActionLink("Usuń", "Delete", new { id = item.ID })
                    }

                </td>
            </tr>
        }
        @if (Model.Count == 0)
        {
            <tr><td><h3>Nie ma filmu</h3></td></tr>
        }
    </table>
<br />
Strona @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
